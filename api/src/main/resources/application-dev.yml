swagger:
  enable: true

spring:
  application:
    name: FSCBigDataPlatformApi

  datasource:
    dm:
      driver-class-name: dm.jdbc.driver.DmDriver
      jdbcUrl: jdbc:dm://10.26.8.173:5236?SYSDBA
      username: SYSDBA
      password: SYSDBA
    mysql:
      jdbcUrl: jdbc:mysql://10.26.8.157:3306/qixiang?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
      username: root
      password: 123456
      driver-class-name: com.mysql.cj.jdbc.Driver
    mysql2:
      jdbcUrl: jdbc:mysql://10.26.8.174:3306/dcm?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
      username: root
      password: 123456
      driver-class-name: com.mysql.cj.jdbc.Driver
    hive-weather:
      driver-class-name: org.apache.hive.jdbc.HiveDriver
      jdbcUrl: jdbc:hive2://10.26.8.161:10000/inceptor_weather
      username: hive
      password: 123456

  kafka:
    bootstrap-servers: 10.26.8.181:9092
    producer:
      # 发生错误后，消息重发的次数。
      retries: 0
      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 16384
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 1
    consumer:
      # 自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
      auto-commit-interval: 1S
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: earliest
      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
      enable-auto-commit: false
      # 键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      #listner负责ack，每调用一次，就立即commit
      ack-mode: manual_immediate
      missing-topics-fatal: false

mybatis-plus:
  typeEnumsPackage: api.common
  mapper-locations: classpath*:mapper/**/*Mapper.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    jdbc-type-for-null: varchar
  global-config:
    id-type: 1
    key-generator: com.baomidou.mybatisplus.extension.incrementer.OracleKeyGenerator
    db-config:
      insert-strategy: not_empty
      update-strategy: not_empty
      select-strategy: ignored
defaultValue: "--"

dcm:
  preurl: https://10.26.8.174:6103/
  username: sdt
  password: sdt108
  serve: sdt://sdt:sdt108@10.26.8.174:2015

qz:
  preurl: http://10.26.8.181/ninca-qk-alarm-app/

#search配置信息
search:
  driver: 10.26.8.161
  host: 9200

kbm:
  driver: 10.26.8.173
  host: 5020

hk:
  url: /artemis/api/
  protocal: https://
  host: 10.26.8.172:443
  appKey: 27778296
  appSecret: z4zhxFzrNyvxZEiclR9R

#logging:
#  config: classpath:log4j.properties